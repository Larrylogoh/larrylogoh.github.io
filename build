#!/usr/bin/env bash
# a script to generate a website from markdown files

shopt -s extglob

dirs=("." "blog" "about" "donate")
options=(--from markdown-markdown_in_html_blocks+raw_html --template=static/template.html) 

rss_include_before='<rss version="2.0">
<channel>		 
  <title>Lawrence Logoh'\''s blog</title>
  <link>https://lawrencelogoh.com</link>
  <description>Blog posts on Lawrence Logoh'\''s blog</description>
  <generator></generator>

'
rss_include_after='
</channel>
</rss>
'
webring=$(cat static/webring.html )

genblogindex(){
    rm -f blog/index.html
    echo "" > blog/src/index.md
    prefix="https://lawrencelogoh.com/blog/"
    for file in blog/src/!(index).md; do
 	[ -e "$file" ] || continue
	
	title=$(head -n 4 "$file" | yq -r ".title")
	date=$(head -n 4 "$file" | yq -r ".date")
	filename="$(basename "$file" ".md")"
	ext=".html"
	link="[$title]($prefix$filename$ext)"
	echo "$date - $link" >> blog/src/index.md
    done
    
    sorted_list=$(cat blog/src/index.md|sort)
    title="    Lawrence Logoh's Blog"
    include_after="include-after: '<a href=\"https://lawrencelogoh.com\"><- Back to home</a>'"

    printf "%s\n" "---" "title: > " "$title" "$include_after"  "---" > blog/src/index.md
    echo "$sorted_list" >> blog/src/index.md

    echo "$webring" >> blog/src/index.md
    
		 
}

gensite(){
    for dir in "${dirs[@]}"; do
	rm -f "$dir"/*.html
	for file in "$dir"/src/*.md; do
	    [ -e "$file" ] || continue
	    pandoc static/metadata.yaml "${options[@]}" -s "$file" -o "$dir"/"$(basename "$file" .md)".html 
	done
	
    done
}

genrss(){
    rm -f rss.xml
    prefix="https://lawrencelogoh.com/blog/"
    
    printf "$rss_include_before" >> rss.xml
    for file in blog/src/!(index).md; do
	[ -e "$file" ] || continue

	title=$(head -n 4 "$file" | yq ".title")
	date=$(head -n 4 "$file" | yq ".date")
	filename="$(basename "$file" ".md")"
	ext=".html"
	link="$prefix$filename$ext"

	article=$(awk "/<article>/, /<\/article>/" blog/"$filename$ext")

	article=$(tr '\n' ' ' <<< "$article")


	post="<item>
		<title>"$title"</title>
		<link>"$link"</link>
		<pubDate>"$date"</pubDate>
		<guid>"$link"</guid>
		<description><![CDATA["${article//$'\n'/}"]]></description>
		</item>" 
	echo -e "$post" >> rss.xml
    done
    printf "$rss_include_after" >> rss.xml
}

# This is optional and requires https://git.sr.ht/~sircmpwn/openring
genwebring(){
    openring \
    -s https://rachelbythebay.com/w/atom.xml \
    -s https://drewdevault.com/feed.xml \
    -s https://protesilaos.com/master.xml \
    -s https://geohot.github.io/blog/feed.xml \
    < static/wr_template.html \
    > static/webring.html 
}

#genwebring
genblogindex
gensite
genrss
